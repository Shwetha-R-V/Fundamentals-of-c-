//Write a program to print the sum of given range of numbers.

Sample Input:
5

10

Sample Output:

45
program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,sum;
    cin>>a>>b;
    sum=0;
    for( int i=a;i<=b;i++)
    {
        sum+=i;
    }
    cout<<sum;
}
//Write a C program to print the sum of given numbers. The values must be scanned until the user enters -1 as value.

Sample Input:
1

2

3

4

-1

Sample Output:
10
program:
#include<iostream>
using namespace std;
int main()
{
    int a,sum=0;

   while(1)
   {
       cin>>a;
       if(a==-1)
       break;
   
   else
   {
       sum+=a;
   }
       
   }
   cout<<sum;
}
//It was Randall's first day at school. His teacher Alisha asked the students to meet every other students in the class and to introduce about themselves. The teacher asked them to do handshakes when they meet each other.
If there are n number of students in the class then find the total number of handshakes made by the students.

Sample Input:
15

Sample Output:

105
program:
#include<iostream>
using namespace std;
int main()
{
    int a,n;
    cin>>a;
    n=(a*(a-1))/2;
    cout<<n;
}
//Write a C program to find the sum and average of even and odd numbers from the given number list.

Sample Input:

1

2

3

4

-1

Sample Output:
6
4
3.00

2.00

program:
#include<iostream>
#include<iomanip>
#include<cmath>
using namespace std;
int main()
{
    float evencount=0,oddcount=0,even=0,odd=0;
    int a;
    while(1)
    {
        cin>>a;
        if(a==-1)
        break;
        else
        {
        if(a%2==0)
        {if(a!=0){
            evencount+=1;
            even+=a;}
        }
        else if(a%2==1)
        {
            oddcount+=1;
            odd+=a;
        }
        else{}
    }
    }
    cout<<even<<"\n";
    cout<<odd<<"\n";
    float o=odd/oddcount;
    cout<<fixed<<setprecision(2)<<round(even/evencount)<<"\n";
    cout<<fixed<<setprecision(2)<<float(o);

}
//Write a C program to find the multiplication tables:

Sample Input:

1

5

Sample Output:

1 * 1 = 1
1 * 2 = 2
1 * 3 = 3
1 * 4 = 4
1 * 5 = 5

program:
#include<iostream>
using namespace std;
int main()
{
    int a,b;
    cin>>a>>b;
    for(int i=1;i<=b;i++)
    {
       
        cout<<a<<" * "<<i<<" = "<<a*i<<"\n";
    }
}
//Write a C program to find the factorial of a given number.

Sample Input:
5

Sample Output:

120
program:
#include<iostream>
using namespace std;
int main()
{
    int n,fact=1;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        fact*=i;
    }
        cout<<fact;
}
//Write a C program to find whether the given number is Fibonacci number.

Sample Input:

3

Sample Output:


Fibonacci number
program:
#include<iostream>
using namespace std;
int main()
{
  int x,f=0;cin>>x;
    for(int i=(x-1);i>0;i--){
        f=f+i;
    }
    if(f==x){
        cout<<"Fibonacci number";
    }
    else{
        cout<<"Not Fibonacci number";
    }  
}
//Ralph's teacher Alisha uses chalks to write on board. When the chalk reduces to 1/squarerootNo of its original size she keeps the chalk aside as it gets too small. She joins all the small pieces of the chalk and make another chalk of same size and uses it. If she uses one chalk each day, how much days she uses the given n number of chalks?
Sample Input:
16

Sample Output:

21
program:
Ralph's teacher Alisha uses chalks to write on board. When the chalk reduces to 1/squarerootNo of its original size she keeps the chalk aside as it gets too small. She joins all the small pieces of the chalk and make another chalk of same size and uses it. If she uses one chalk each day, how much days she uses the given n number of chalks?
Sample Input:
16

Sample Output:

21
//Write a C program to find whether the given number is Armstrong number or not.

Note: 371 is an Armstrong number since 3^3+ 7^3 + 1^3 = 371.

Sample Input:

153

Sample Output:

Armstrong Numbe
program:
#include<iostream>
using namespace std;
int main(){
int a,b,c,sum=0;
cin>>a;
while(a!=0){
    b=a%10;
    a=a/10;
    c=(b*b*b);
    sum+=c;}
    if(sum==a){
    cout<<"Armstrong number";}
    else{
        cout<<"Not an Armstrong number";
        }
   
}
//Write a C program to find whether the given number is Prime number or not.

Sample Input:

2

Sample Output:

Prime
program:
#include<iostream>
using namespace std;
int main()
{
    int a;
    cin>>a;
    if(a%2!=0 || a==2)
    {
        cout<<"Prime";
    }
    else
    {
        cout<<"Not Prime";
    }
}
//Write a C program to add two dollars and cents:

Sample Input:
30 dollars
10  cents
140 dollars
99   cents

Sample Output:
171 dollars

9      cents

program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,c,d,e,f;
    cin>>a>>b>>c>>d;
    e=a+c;
    f=b+d;
    while(f>100){
        f-=100;
        e+=1;
    }cout<<e;
    cout<<"\n"<<f;
}
//Write a C program to find whether the given number is Harshard number or not.

Sample Input:
1729

Sample Output:
Harshard number

program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,c,sum=0;
    cin>>a;
    c=a;
    while(a!=0)
    {
        b=a%10;
        a=a/10;
        sum+=b;
    }
    if((c%sum)==0)
    {
        cout<<"Harshard number";
    }
    else
    {
        cout<<"not Harshard number";
    }
}
//Write a C program to find whether the given number is Abundant number or not.

Sample Input:
6

Sample Output:

Not Abundant number
program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,sum=0;
    cin>>a;
    for(int i=0;i<a;i++)
    {
        if(i%a==0)
        {
            sum+=b;
           if(b>a)
           {     
            cout<<"Not Abundant number";
        }
        else
        {
            cout<<"Abundant number";
        }
        }
    }
}
//Write a C program to find whether the given numbers are Friendly Pair or not.

Note: Friendly Pair are two or more numbers with a common abundancy.
For example, 6 and 28 are Friendly Pair.
(Sum of divisors of 6)/6 = (Sum of divisors of 28)/28

Sample Input:
6
28

Sample Output:
Friendly Pair
program:
Write a C program to find whether the given numbers are Friendly Pair or not.

Note: Friendly Pair are two or more numbers with a common abundancy.
For example, 6 and 28 are Friendly Pair.
(Sum of divisors of 6)/6 = (Sum of divisors of 28)/28

Sample Input:
6
28

Sample Output:
Friendly Pair
//Write a program to generate the following series – 7, 5, 8, 6,  9….

Sample Input:
5

Sample Output:

7 5 8 6 9
program:

