//Rabina is interested so much in gardening and she plants more trees in her garden. She plants trees in the order of rows and columns. She numbered the trees in column wise order. She planted mango tree only in the second column from both first and last. But later when the trees grew up she forgot where she planted mango trees. So help her to find whether the given tree number is a number of mango trees or not. Display whether “It is a mango tree” or “It is not a mango tree”.

INPUT FORMAT:

Input consists of 3 integers.

First input corresponds to the number of rows.

Second input corresponds to the number of columns.

Third input corresponds to the tree number

Output :Display whether “It is a mango tree” or “It is not a mango tree”.

Sample Input:

5

20

Sample Output:

It is a mango tree

program:
#include<iostream>
using namespace std;
int main()
{
    int r,c,t;
    cin>>r>>c>>t;
    if(t>r && t<=r*2){
        cout<<"It is a mango tree";
    }
    else if((t<=r*(c-1))&&(t>r*(c-2))){
        cout<<"It is a mango tree";
        
    }
    else
    {
        cout<<"It is not a mango tree";
    }
}
//Write a program to find which number is greatest among two numbers.

Input Format:

Input consists of two integers.

Output Format:

Output consists of greater number.


Sample Input:

77

99

Sample Output:

99 is greater

program:
#include<iostream>
using namespace std;
int main()
{
    int a,b;
    cin>>a>>b;
    if(a>b)
    {
        cout<<a<< " is greater";
    }
    else
    {
        cout<<b<< " is greater";
    }
}
//Write a program to find which number is greatest among three numbers.


Input Format:

Input consists of three integers.

Output Format:

output consists of greater number


Sample Input:
10

20

30

Sample Output:

30 is greater

program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,c;
    cin>>a>>b>>c;
    if(a>=b&&a>=c)
    {
        cout<<a<<" is greater";
    }
    else if(b>=a&&b>=c)
    {
        cout<<b<<" is greater";
    }
    else
    {
        cout<<c<<" is greater";
    }
}
//Write a program to find whether the given number is positive or negative.


Input & Output Format:

Input consists of a integer.

if it is positive display "Positive" or else display "Negative 

if it is zero display "Equal to 0"


Sample Input:
2

Sample Output:

Positive
program:
#include<iostream>
using namespace std;
int main(){
    int a;
    cin>>a;
    if(a>0)
    {
        cout<<"Positive";
    }
    else if(a==0)
    {
        cout<<"Equal to 0";
    }
    else
    {
        cout<<"Negative";
    }
}
//Dev went a tour to Goa with his friends. There they went for boating. The rule is that only restricted weight can travel in a boat at a time so that the boat remains stable in the boat. You find that the boatman who is sailing your boat is so much greedy in making money. For earning more money he takes many number of peoples to travel in the boat at a time. So you wants to check how much number of people can travel in the boat at a time so that the boat will not drown. Calculate the weight by considering the number of adults and number of children.

INPUT & OUTPUT FORMAT:

Input consists of 3 integers.

First input corresponds to the weight that the boat can handle.

Second input corresponds to the number of adults.

Third input corresponds to the number of children.

Output consists of a string.
If the boat can handle weight display "Boat is stable" or else display "Boat will drown"

Hint:

Adult: 75

Children: 50

Sample Input:
340

2

3
Sample Output:

Boat is Stable
program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,c,d,e;
    cin>>a>>b>>c;
    if(b*75+c*50<=a)
    {
    cout<<"Boat is stable";
}
else
{
    cout<<"Boat will drown";
}
}
//Joshua is interested very much in seeing Bike race. One Bike is coming so fast. The road on which the Bike comes is divided in to three . There are three roads A, B and C. Each road's distance is given in metres. Before the Bike reaches the end of the road Joshua wants to know that out of three roads in which road the Bike will go if he maintains the given speed. Help him in finding in which road the Bike will travel?

INPUT & OUTPUT FORMAT:

Input consists of 4 integers.

First input corresponds to the distance of road A.

Second input corresponds to the distance of road B.

Third input corresponds to the distance of road C.

Fourth input corresponds to the speed of the bike.

If the Bike cannot travel on any road, display “No path exist”.


Sample Input:
243

136

567

17

Sample Output:
Bike 1 goes into road B
program:
#include<iostream>
using namespace std;
int main()
{
   int a,b,c,d;
   cin>>a>>b>>c>>d;
   if((a%d)==0)
   {
       cout<<"Bike 1 goes into road A";
   }
   else if((b%d)==0)
   {
       cout<<"Bike 1 goes into road B";
   }
   else if((c%d)==0)
   {
       cout<<"Bike 1 goes into road C";
   }
   else
   {
       cout<<"No path exist";
   }
}
//Alisha is very interested in mathematics and daily she loves to solve mathematic puzzles. Her friend knows that and she asks her to find what an automorphic number is and to implement that concept using C programming. But Alisha is not very much good in programming. So help Alisha to implement this concept.

Input & Output Format:

Input consists of a integer.

Output consists of a string.

If the number is true display "Automorphic" if not display "Not Automorphic Number"


Sample Input:

7

Sample Output:

Not Automorphic number

program:
#include<iostream>
using namespace std;
int main()
{
    int a;
    cin>>a;
    if((a*a)%10==a)
    {
        cout<<"Automorphic number";
    }
    else
    {
        cout<<"Not Automorphic number";
    }
}
//Write a program to find whether a given character is an upper,lower, number or symbols.


INPUT & OUTPUT FORMAT:

The input consists of a character.

The output should be any one of the below-given strings.

"Upper" or "Number" or "Symbol" or "Lower"


Sample Input:

A

Sample Output:

Upper
program:
#include<iostream>
using namespace std;
int main()
{
    char ch;
    cin>>ch;
    if((ch>='a')&&(ch<='z'))
    {
        cout<<"Lower";
    }
    else if((ch>='A')&&(ch<='Z'))
    {
        cout<<"Upper";
        
    }
    else if ((ch>='0')&&(ch<='9'))
    {
        cout<<"Number";
    }
    else
    {
        cout<<"Symbol";
    }
}
//Electricity board have decided to charge rupees based on the units consumed by particular home. If the units consumed is less than or equal to 200 the cost for one unit is 0.5. If the unit is less than or equal to 400 the cost for one unit is 0.65 and Rs.100 extra charge. If the unit is less than or equal to 600 the cost for one unit is 0.80 and Rs.200 extra charge. If the unit is greater than 600 the cost for one unit is 1.25 and Rs.425 extra charge.

INPUT & OUTPUT FORMAT:

Input consists of one integer.

This corresponds to the units consumed.

The output consists of one integer.

This corresponds to the electricity bill in rupees.


Sample Input:
200

Sample Output:

Rs.100
program:
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
    int a;
    cin>>a;
    if(a<=200)
    {
        cout<<"Rs."<<ceil(a*0.5);
    }
    else if(a<=400)
    {
    
        cout<<"Rs."<<ceil(a*0.65+100);
    }
    else if(a<=600)
    {
    
        cout<<"Rs."<<ceil(a*0.80+200);
    }
    else if(a>600)
    {
        cout<<"Rs."<<ceil(a*1.25+425);
    }
}
//Sabrina and Theo were friends. They felt very bored and decided to play a game with calendar and number of days. Sabrina will give the month and the year as input, and Theo wants to find the number of days in that month. Write a C program using switch case and help Sabrina to find the answer. You should check whether the given year is a leap year. If it is a leap year it will have 29 days in February.

Input & Output Format:

Input consists of two integers.

First input consists of  a month.

Second input consists of a year.

Output consists of a integer.


Sample Input:

3

1996

Sample Output:

Number of days is 31

program:
#include<iostream>
using namespace std;
int main()
{
    int m,y;
    cin>>m>>y;
     switch(m){
        case 1:cout<<"Number of days is 31";break;
        case 2:if(y%4==0){
        cout<<"Number of days is 29";break;
        }
        else{
        cout<<"Number of days is 28";break;
            
        }
        case 3:cout<<"Number of days is 31";break;
        case 5:cout<<"Number of days is 31";break;
        case 7:cout<<"Number of days is 31";break;
        case 9:cout<<"Number of days is 31";break;
        case 11:cout<<"Number of days is 31";break;
     
     
    default:cout<<"Number of days is 30";
     }
}
//A wall is of length L and breadth B. Karthi is trying to fit two rectangular paintings in it. He wants to fit these paintings on the wall such that they do not overlap on each other or they should not move outside the area of the wall. He also knows the length and breadth of both the paintings. Help him in finding whether two paintings can fit in to the wall properly or not.
INPUT & OUTPUT FORMAT:

Input consists of 6 integers.

First and second input corresponds to the length and breadth of the wall.

Third and fourth input corresponds to the length and breadth of the first painting.

Fifth and sixth input corresponds to the length and breadth of the second painting.

If both the paintings can be fixed on the wall, display “Karthi can fix both painting” or display “Karthi cannot fix both painting”.


Sample Input:
10
10
5
5
5
5

Sample Output:

Karthi can fix both painting

program:
#include<iostream>
using namespace std;
int main()
{
   int a,b,c,d,e,f,x,y,z;
   cin>>a>>b>>c>>d>>e>>f;
   x=a*b;
   y=c*d;
   z=e*f;
   if(x>=(y+z))
   {
       cout<<"Karthi can fix both painting";
   }
   else
   {
       cout<<"Karthi cannot fix both painting";
   }
   
}
//Siva after finishing his degree joined a company in Gurugram. His Manager have said him that Siva will get increment if he works hard. As he belongs to a middle class family he wants to plan the budget according to his salary. He stays in hostel. His expenses are Hostel fees, bank loan interest. He wants to find whether he can save money or he want to work hard or his salary will be able to manage his expenses alone. Help him in calculating the budget.

Sample Input:


10000
5000
4000
1500
5000

Sample Output:
He wants to work hard
program:
#include<iostream>
using namespace std;
int main()
{
    int a,b,c,d,e;
    cin>>a>>b>>c>>d>>e;

if(a>(b+c+d+e))
    {
        cout<<"He can save the money";
    }
    else
    {
        cout<<"He wants to work hard";
    }
}
//Ajay wants to buy a T-shirt. As he is very lazy, he decided to buy the T-shirt through online shopping. He chooses a T-shirt in Flipkart and surprised to see the same T-shirt also in Amazon and Snapdeal. So he decided to buy the T-shirt in which the price of the T-shirt is low. The price of the T-shirt, discount % and the shipping charges of all three websites have been given as input. Help in calculating the price of T-shirt in each website and help him to decide which website has low price.

INPUT & OUTPUT FORMAT:

Input consist of 9 integers.

First three input corresponds to Flipkart details such as the amount of the shirt, discount offered and shipping charges.

Next three input corresponds to Snapdeal details such as the amount of shirt, discount offered and shipping charge.

Last three input corresponds to amazon details such as the amount of shirt, discount offered and shipping charge.



Sample Input:

1000
50
50
900
50
70
800
10
200

Sample Output:

In Flipkart Rs.550
In Snapdeal Rs.520
In Amazon Rs.920
He will prefer Snapdeal
program:
#include <iostream>
using namespace std;
int main()
{
    int fa,fd,fs,sa,sd,ss,aa,ad,as;
    cin>>fa>>fd>>fs>>sa>>sd>>ss>>aa>>ad>>as;
    int flipkart=(fa-(((fd*fa)/100)-fs));
    cout<<"In Flipkart Rs."<<flipkart<<"\n";
    int snapdeal=(sa-(((sd*sa)/100)-ss));
    cout<<"In Snapdeal Rs."<<snapdeal<<"\n";
    int amazon=(aa-(((ad*aa)/100)-as));
    cout<<"In Amazon Rs."<<amazon<<"\n";
    if(flipkart<snapdeal && flipkart<amazon)
    cout<<"He will prefer Flipkart";
    else if(snapdeal<flipkart && snapdeal<amazon)
    cout<<"He will prefer Snapdeal";
    else
    cout<<"He will prefer Amazon";
}
//Geralt starts a new stationery shop. He wants to calculate the number of items that are sold and the number of items that are remaining in the stock. When a customer asks for a new item he should check whether the item is already sold or it is available. If the item is not available it should display, "Out of stock". If it is there it should display remaining number of items available and the total cost that should be paid by a customer. If the items asked by the customer is greater than the items available it should display how much number of item is available.
For eg: If customer asks 8 scales and only 3 scales are available, display "Only 3 scale are available"

Input & Output Format:

Input consists of 1 string and 3 integers.

First input consists of the name of the stock.

Second input consists of the number of the stock.

Third input consists of the amount of the thing.

Fourth input consists of the remaining item of the stock.

Refer the sample output for the output.


Sample Input: 

pen
10
15
5

Sample Output:

Amount for 5 pencil is 75
Remaining number of pencil present in stock is 5

program:
#include<iostream>
using namespace std;
int main()
{
    string name;
    int a,b,c;
    cin>>name>>a>>b>>c;
    cout<<"Amount for "<<c<<" "<<name<<" is "<<(b*c)<<"\n";
    cout<<"Remaining number of "<<name<<" present in stock is "<<(a-c);
}
//You are so much interested in making your body fit. You want to go to gym daily to make your body fit. But your mother did not like to allow you to gym. But she says she will allow you to gym if your weight is not normal. So you want to calculate your Body Mass Index.
Write a C program to calculate your BMI for your weight and height. Enter your height in centimeters and weight in kilograms.

Input & Output Format:

Input consists of two integers.

First input consists of the weight.

Second input consists of the height.

If your weight is normal display "You are normal. Go walking daily and maintain it"
If your weight is under your normal then display "You are underweight. Have an apple daily"

If your weight is over weight then display "You are obese. Go to doctor".

Sample Input:


75
175

Sample Output:

You are normal. Go walking daily and maintain it.

program:
#include<iostream>
using namespace std;
int main()
{
    float w,h,bmi;
    cin>>w>>h;
    h=h/100;
    bmi=w/(h*h);
    if(bmi<18.5)
    cout<<"You are underweight. Have an apple daily.";
    else if(bmi>=18.5 && bmi<=24.9)
    cout<<"You are normal. Go walking daily and maintain it.";
    else
    cout<<"You are obese. Go to doctor.";
}
//Karan have a cylindrical tank in which he have to fill water in certain hours. For every one hour his house will receive N litres of water from the corporation. Find whether he will be able to fill the tank with water in X hours. The radius and height of cylinder is given as input:

INPUT & OUTPUT FORMAT:

Input consists of 4 integer values.

First input corresponds to the radius of the tank.

Second input corresponds to the height of the tank.

Third input corresponds to the amount of water the tank receives every hour.

Fourth input corresponds to the total number of hours the tank receives water.



Sample Input:  

5
7
100
6

Sample Output:
The tank can be filled within 6.0 hours
program:
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
    float r,h,t,a;
    cin>>r>>h>>t>>a;
    cout<<"The tank can be filled within "<<fixed<<setprecision(1)<<((t*a)/t)<<" hours";
}
//On one fine Sunday Shilpa and Rabina decided to solve puzzles. Shilpa asked Rabina to solve her puzzle. Shilpa gave puzzle on Time. She gave Rabina the number of hours, number of minutes and number of seconds as input. With the given input, Rabina should find the total number of hours total number of minutes and total number of seconds.

Input Format :

Input consists of three integers.

First input consists of hours.

Second input consists of minutes.

Third Input consists of seconds.

Output Format:

First output consists of hours.

Second output consists of minutes.

Third output consists of seconds.


Sample Input:

1
15
10

Sample Output:
Total Number of hour(s) is 1
Total Number of minutes is 15
Total Number of seconds is 10
program:
#include<iostream>
using namespace std;
int main()
{
    int h,m,s,x,y,r;
    cin>>h>>m>>s;
    r=s/60;
    y=s%60;
    cout<<"Total Number of hours is "<<h<<"\n";
    cout<<"Total Number of minutes is "<<(m+r)<<"\n";
    cout<<"Total Number of seconds is "<<y<<"\n";
}
//Dutch and Nora are close friends. They both are studying in same school. Now they are in summer vacation. As they feel very bore, they ask their parents to take them to an exhibition. There Dutch and Nora play a game. There are three boxes with some number written on their top. There is a treasure in one of the three boxes, which has second largest number on its top. They want to type some code to open the box which has a treasure. They want to find the code correctly to open the box. The clue given to them to find the code is the largest number which divide the all the three given numbers.
INPUT FORMAT:

Input consists of three integers.

 First input corresponds to the number of the first box. 

Second input corresponds to the number of the second box. 

Third input corresponds to the number of the third box.


Sample Input:
2
4
6

Sample Output:
The treasure is in box which has number 4.
The code to open the box is 2.

program:
#include<iostream>
#include<algorithm>
using namespace std;
int main()
{
int a, b, c,num;
    cin>>a>>b>>c;
    int nums[3]={a,b,c};
    sort(nums,nums+3);
    int seclar=nums[1];
    int minVal=min({a,b,c});
    int gcd=1;
    for(int i=1;i<=minVal;i++)
    {
        if(a%i==0 && b%i==0 && c%i==0)
        {
            gcd=i;
        }
    }
    cout<<"The treasure is in box which has number "<< seclar<<"\n";
    cout<<"The code to open the box is "<< gcd<<"\n";
}
//Abraham after getting his first salary decided to go to bank to deposit his savings in his account. Before that he does not know the process that are undertaken in bank. Help him in understanding the process of depositing money and withdrawal of money. Use switch to implement this concept.

Input & Output Format:

Input consists of three integers.

First input consists of amount in the account.

Second input consists of the switch case

the value 1 corresponds to deposit 

the value 2 corresponds to withdraw.

Third input consists of the amount.

The output consists of one integer.

If the amount is less than the withdraw amount display "Insufficient Balance".

If the value is more than the switch statement cases display "Invalid Input".

Sample Input:
1000
1
500

Sample Output:
1500
program:
#include <iostream>
using namespace std;
int main()
{
    int a,b,c,amt;
    cin>>a>>b>>c;
    switch(b)
    {
        case 1:
        cout<<(a+c);break;
        case 2:
        cout<<"Insufficient Balance";break;
        default:
        cout<<"Invalid input";
    
    }
}
//Zack is going to celebrate his birthday on January. His father wants to buy a new dress for his son. As they are Christian, he also wants to buy new dress for Christmas. As all the textile showrooms offers discount on the month of December his father decides to buy dress for Zack's birthday in December itself. Before that he wants to know how much discounts they give on each month. In the first month of the year they offer 20% discount. In the third and fourth month they offer 10% discount. In the sixth and seventh month they offer 75% discount. In the tenth and eleventh month they offer 30% discount. In the twelfth moth they offer 35% discount. Implement this program using switch.

Input & Output Format:

input consists of two integers.

first input corresponds to the amount.

second input corresponds to the month

output consists of the amount after calculating the discount.

Sample Input:

1000
1

Sample Output:

Zack's father needs to pay Rs.800.00.
program:
#include<iostream>
#include<iomanip>
 using namespace std;
 int main()
 {
     int a,m;
     cin>>a>>m;
     switch(m)
     {
         case 1:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.20*a);break;
         case 3:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.10*a);break;
         case 4:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.10*a);break;
         case 6:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.75*a);break;
         case 7:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.75*a);break;
         case 10:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.30*a);break;
         case 11:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.30*a);break;
         case 12:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<a-(0.35*a);break;
         default:cout<<fixed<<setprecision(2)<<"Zack's father needs to pay Rs."<<float(a);
     }
 }
 //Dora is interested so much in gardening and she plants more trees in her garden. She plants trees in a squar fashion with the order of rows and columns and numbered the trees in row-wise order. She planted the Neem tree only in a 1st row, 1st column and last column. So given the tree number, your task is to find whether the given tree is a Neem tree or not? Write a program to check whether the given number is a mango tree or not. Assume that she plants in square matrix order.

Input format: 

Input consists of 3 integers 

The first input denotes the number of rows 

The second input denotes the number of columns 

The third input denotes the tree number 

Output format:

 If the given number is a mango tree, print "Yes". 

Otherwise, print "No" 

Refer the sample output for formatting

Sample Input:

5

5

11  

Sample Output:

Yes
program:
#include<iostream>
using namespace std;
int main()
{
    int r,c,t;
    cin>>r>>c>>t;
    if(t>0 && t<=r)
    {
        cout<<"Yes";
    }
    else if(t<=(r*c)&& t>r*(c-1))
    {
        cout<<"Yes";
    }
    else if((t>0 )&&(t%r==1))
    {
        cout<<"Yes";

    }
    else
    {
        cout<<"No";
    }
}
//Dr. Dexter regularly visits his only friend Dr. Lee. Dr. Lee lives in a city named Nakuto. In order to get to Nakuto, Dr. Dexter has to take National Highways (NH  999). NH 999 has a toll booth where the toll passes are categorized as One-way pass, Two-way pass, and Monthly pass.
If Dr. Dexter travels to Nakuto and doesn't return the same day, a one-way pass would do better. If he travels to Nakuto and returns to his hometown the same day, a two-way pass is economical. One-way passes cost $O, two-way passes cost $T and monthly-passes cost $M. In a month, Dr. Dexter plans to travel 'x' times to Nakuto and stays there, travel 'y' times to Nakuto and returns home the same day. He wants Xinyou to know whether a combination of one-way and two-way passes would be economical or a monthly pass would be economical. 

Write a Java program module that finds out whether he ought to take a monthly-pass or a combination of one-way and two-way passes.
 
INPUT FORMAT:

Input consists of 5 lines.
The first line of input is an integer 'x', which corresponds to the sum of the number of times Dr. Dexter travels only to Nakuto and doesn't return back in a day and the number of times he travels to his home town from Nakuto without a two-way pass.
The second line of input is an integer 'y', which corresponds to the number of times Dr. Dexter travels to Nakuto and returns back to his hometown the same day.
The third line of input is a floating point number 'o', which corresponds to the cost of a one-way pass.
The fourth line of input is a floating point number 't', which corresponds to the cost of a two-way pass.
The fifth line of input is a floating point number 'm', which corresponds to the cost of a monthly pass.
OUTPUT FORMAT:
Output consists of a string, "Monthly Pass" or "Invalid Input" or "One way pass + Two way pass".
Refer to the sample input and output for formatting specifications. 
Note: When the combination of one-way and two-way pass equals monthly pass, Dr.Dexter prefers monthly pass.

Consider, o < t < m

SAMPLE INPUT & OUTPUT 1:
10
15
10
12
250
Monthly Pass
SAMPLE INPUT & OUTPUT 2:
20
20
100
110
5000
One way pass  +  Two way pass
SAMPLE INPUT & OUTPUT 3:
10
15
15
12
250
Invalid Input

program:
#include<iostream>
using namespace std;
int main()
{
    int x,y,xrs,yrs,mrs;
    cin>>x>>y>>xrs>>yrs>>mrs;
    if(yrs<xrs)
    {
        cout<<"Invalid Input";
    }
    else{
        if((x*xrs+y*yrs)<mrs)
        cout<<"One way pass + Two way pass";
        else if((x*xrs+y*yrs)>mrs)
        cout<<"Monthly Pass";
     else if((x*xrs+y*yrs)==mrs)
    cout<<"Monthly pass";
    else cout<<"Invalid Input";}
    
}
//Dr. Dexter has now started his trip to Shinyao. Unfortunately, he has forgotten about the fuel. There are two gas bunks on the way to Shinyao, 'A' and 'B'. As soon as his car reaches the bunk A, it runs out of fuel. Bunks A and B are 'd' miles apart. Xinyou, the robot finds out from statistics that one of the bunks provides the best quality fuel. They decide on filling the best quality fuel.
Write a C++ program module that finds the quantity of fuel that has to be filled at bunks A and B.
 
INPUT FORMAT:
Input consists of 4 lines.
The first line of input is an integer d (0 <  d < 32767), which corresponds to the distance between bunks A and B
The second line of input is an integer s (0 <  s < 32767), whcih corresponds to the distance between bunk A and Shinyao.
The third line of input is a floating point number 'm' corresponding to the mileage Dr.Dexter's car yields.
The fourth line of input is the character 'b' corresponding to the bunk that provides the best quality fuel. Assume that b takes values either 'A' or 'B'
Assume that bunk A lies before bunk B.
OUTPUT FORMAT:
Output consists of the quantities of fuel to be filled at bunks A and B, correct up to 2 decimal places.
Refer to the sample input and output for formatting specifications. 
SAMPLE INPUT & OUTPUT:
100
200
25
B
4.00
4.00
program:
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
    float a,b,c,e,f;
    char d;
    cin>>a>>b>>c>>d;
    e=a/c;
    f=b-a;
    if(d=='B')
    {
        cout<<fixed<<setprecision(2)<<e;
        cout<<"\n"<<fixed<<setprecision(2)<<(f/c);
    }
    else
    {
        float J=0;
        cout<<fixed<<setprecision(2)<<(e+(f/c));
        cout<<"\n"<<fixed<<setprecision(2)<<J;
    }
}
//Dr. Dexter is now in the gas bunk. He has filled fuel with your help and now is about to take an air check. He wants Xinyou to fill air. Dr. Dexter owns a Honda Civic and Xinyou gets to know that the air pressure to be filled in the front tyres is 33 PSI and rear tyres is 32 PSI. 
Write a C++ program to check if the tyres already have enough air and print whether the tyres have to be deflated, inflated or left untouched. 
  
INPUT FORMAT:
Input consists of 4 lines of floating point numbers, each corresponding to the air pressure in each of the tyres. 
The first line corresponds to the front-left tyre. 
The second line corresponds to the rear-left tyre. 
The third line corresponds to the rear-right tyre. 
The fourth line corresponds to the front-right tyre. 
OUTPUT FORMAT:
Output consists of 4 lines.  
Refer to the sample input and output for formatting specifications.  
SAMPLE INPUT & OUTPUT: 
33 
35 
40 
31 
Front-left : Untouched 
Rear-left : Deflate 
Rear-right : Deflate 
Front-right : Inflate
program:
#include<iostream>
using namespace std;
int main()
{
    float f1,f2,r1,r2;
    cin>>f1>>r1>>r2>>f2;
    if(f1==33)
        {
        cout<<"Front-left : Untouched\n";
         }
        else if(f1>33)
        {
        cout<<"Front-left : Deflate\n";
        }
        else 
        {
            cout<<"Front-left : Inflate\n";
        }
        if(r1==32)
        {
            cout<<"Rear-left : Untouched\n";
        }
        else if(r1>32)
        {
            cout<<"Rear-left : Deflate\n";
        }
        else
        {
            cout<<"Rear-left : Inflate\n";
        }
        if(r2==32)
        {
            cout<<"Rear-right : Untouched\n";
            
        }
        else if(r2>32)
        {
            cout<<"Rear-right : Deflate\n";
        }
        else
        {
            cout<<"Rear-right : Inflate\n";
        }
        if(f2==33)
        {
            cout<<"Front-right : Untouched";
        }
        else if(f2>33)
        {
            cout<<"Front-right : Deflate";
        }
        else
        {
        cout<<"Front-right : Inflate";
        }
        
    
}
//
